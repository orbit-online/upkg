name: Release

on:
  push:
    tags: ['v*']

jobs:
  test:
    uses: ./.github/workflows/test.yaml
    secrets: inherit
  upload-schema:
    needs: [test]
    uses: ./.github/workflows/upload-schema.yaml
    secrets: inherit
  bundle:
    name: Release μpkg
    environment: release
    needs: [test]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.ref }}
    - name: Install μpkg dependencies
      run: tools/install-deps.sh
    - name: Setup current μpkg as bundler
      run: |
        mkdir -p "$HOME/.local/bin"
        ln -s "$(realpath bin/upkg)" "$HOME/.local/bin/upkg"
    - uses: orbit-online/upkg-bundle@v1
      with:
        paths: bin lib README.md LICENSE upkg.schema.json
    - name: Create upkg-install snapshot
      run: tools/create-install-snapshot.sh upkg.tar.gz upkg-install.tar.gz
    - name: Create sha256 checksum of upkg-install.tar.gz
      id: upkg-install-sha256
      run: printf "sha256=%s\n" "$(shasum -a 256 "upkg-install.tar.gz" | cut -d ' ' -f1)" >> $GITHUB_OUTPUT
    - name: Create upkg-compat bundle & upkg-compat-install snapshot
      run: tools/create-compat-install-snapshot.sh upkg.tar.gz upkg-compat.tar.gz upkg-compat-install.tar.gz
    - uses: orbit-online/git-release@v1
      id: release
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        name: ${{ steps.release.outputs.tag }}
        body: |
          Install using this snippet. See the [README](https://github.com/orbit-online/upkg/blob/${{ steps.release.outputs.tag }}/README.md#installation) for details
          and [install.sh](https://github.com/orbit-online/upkg/blob/${{ steps.release.outputs.tag }}/install.sh) for a fully commented version.

          ```
          # Read the fully documented version on github.com/orbit-online/upkg
          bash -ec 'P=${INSTALL_PREFIX:-$([[ $EUID = 0 ]]&&echo /usr/local||echo "$HOME/.local")};\
          u=https://github.com/orbit-online/upkg/releases/download/${{ steps.release.outputs.tag }}/upkg-install.tar.gz;\
          c=${{ steps.upkg-install-sha256.outputs.sha256 }}; echo>&2;\
          t=$(mktemp); trap "rm \"$t\"" EXIT; wget -qO"$t" "$u" || curl -fsLo"$t" "$u";\
          shasum -a 256 -c <(echo "$c  $t") >/dev/null;mkdir -p "$P";cd "$P"; for f in $(\
          tar tzf "$t"); do [[ $f != */ && -e $f ]] && { echo "$f already exists">&2;\
          exit 1; }; done; tar xzf "$t";echo "μpkg has been installed and can now be \
          invoked with \"upkg\"" >&2;type jq &>/dev/null||echo "WARNING: \"jq\" was not \
          found in \$PATH. jq is a hard dependency." >&2'

          # Short version without overwrite checks for e.g. docker, installs to /usr/local
          RUN bash -ec 'u=https://github.com/orbit-online/upkg/releases/download/${{ steps.release.outputs.tag }}/upkg-install.tar.gz;\
          t=$(mktemp); trap "rm \"$t\"" EXIT;wget -qO"$t" "$u" || curl -fsLo"$t" "$u";\
          shasum -a 256 -c <(echo "${{ steps.upkg-install-sha256.outputs.sha256 }}  $t");\
          tar xzC /usr/local -f "$t"'
          ```

          ${{ steps.release.outputs.message }}
        draft: false
        prerelease: false
        artifacts: upkg.tar.gz,upkg-compat.tar.gz,upkg-install.tar.gz,upkg-compat-install.tar.gz,upkg.schema.json
        artifactErrorsFailBuild: true
        artifactContentType: application/gzip
